import { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "../Api/axios";
import Swal from "sweetalert2";
import "./Cartpage.scss";

const CartPage = () => {
  const { table_id } = useParams();
  const [cart, setCart] = useState(JSON.parse(localStorage.getItem("cart")) || []);
  const session_id = localStorage.getItem(`session_${table_id}`) || Date.now();
  const navigate = useNavigate();

  const updateQuantity = (menu_id, change) => {
    setCart((prevCart) => {
      return prevCart
        .map((item) => (item.menu_id === menu_id ? { ...item, quantity: item.quantity + change } : item))
        .filter((item) => item.quantity > 0); // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0
    });
  };

  const handleOrder = async () => {
    try {
      const response = await axios.post("/orders/bulk", {
        table_id,
        session_id,
        orders: cart,
      });

      if (response.status === 201) {
        Swal.fire("‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", "success");
        setCart([]); // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
        localStorage.removeItem("cart");
        navigate(`/order/${table_id}`);
      }
    } catch (error) {
      console.error("‚ùå Error placing order:", error);
      Swal.fire("Error", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ", "error");
    }
  };

  return (
    <div className="cart-container">
      <h1>üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
      {cart.length > 0 ? (
        cart.map((item) => (
          <div key={item.menu_id} className="cart-item">
            <span>{item.menu_name}</span>
            <button onClick={() => updateQuantity(item.menu_id, -1)}>-</button>
            <span>{item.quantity}</span>
            <button onClick={() => updateQuantity(item.menu_id, 1)}>+</button>
          </div>
        ))
      ) : (
        <p>‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤</p>
      )}

      {cart.length > 0 && (
        <button className="checkout-btn" onClick={handleOrder}>
          üöÄ ‡∏™‡πà‡∏á {cart.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </button>
      )}
    </div>
  );
};

export default CartPage;
